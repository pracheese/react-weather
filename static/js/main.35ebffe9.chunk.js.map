{"version":3,"sources":["Weather.js","index.js","ApiKeys.js"],"names":["CustomizedDot","require","props","cx","cy","x","y","width","height","fill","viewBox","r","CurrentInfo","className","city","weather","temp","Weather","state","curr_temp","curr_city","curr_weather","temp_time_data","weatherData","componentDidMount","forecastURL","keys","weatherKey","weatherURL","fetch","then","response","json","data","Math","round","main","name","description","console","log","setState","res","timeArr","list","map","item","tempArr","weatherArr","desc","des","feelsArr","i","push","tempData","this","currentTemp","currentCity","currentWeather","dataKey","barSize","type","stroke","dot","interval","cursor","strokeWidth","verticalAlign","iconSize","React","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.35ebffe9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport keys from  './ApiKeys.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\nvar moment = require('moment');\n\nconst CustomizedDot = (props) => {\n  const {\n    cx, cy\n  } = props;\n  return (\n    <svg x={cx-1} y={cy-1} width={40} height={40} fill=\"#f13c20\" viewBox=\"0 0 1024 1024\">\n      <circle cx={15} cy={15} r={70} />\n    </svg>\n  );\n};\n\nconst CurrentInfo = (props) =>{\n  return(\n    <div className=\"justify-content-center\">\n      <h5>{props.city} </h5>\n      <h6>{props.weather}</h6>\n      <h5>{props.temp} </h5>\n    </div>\n  )\n}\n\nclass Weather extends React.Component {\n  \n    state = {\n      curr_temp:0,\n      curr_city: \"\",\n      curr_weather:\"\",\n      temp_time_data:[],\n      weatherData:[]\n    };\n\n  componentDidMount = () => {\n     const forecastURL =\n    `https://api.openweathermap.org/data/2.5/forecast?zip=20901,us&units=metric&APPID=${keys.weatherKey}`\n    const weatherURL =\n    `https://api.openweathermap.org/data/2.5/weather?zip=20901,us&units=metric&APPID=${keys.weatherKey}`\n\n    fetch(weatherURL)\n      .then(response => response.json())\n      .then(data => {\n        const curr_temp = Math.round(data.main[\"temp\"])\n        const curr_city = data.name\n        const curr_weather = data.weather[0].description\n        \n        console.log(\"current\" , data.weather[0].description)\n      this.setState({\n        curr_city:curr_city,\n        curr_temp:curr_temp,\n        curr_weather:curr_weather\n      })})\n\n    fetch(forecastURL)\n    .then(res => res.json())\n    .then(data => {\n    const timeArr = data.list.map(item => item['dt_txt'])\n    const tempArr = data.list.map(item => item['main'])\n    const weatherArr = data.list.map(item => item['weather']).map(desc=>(desc[0])).map(des=>(des['description']))\n    const feelsArr = tempArr.map(temp=>Math.round(temp['feels_like']))\n    const temp = tempArr.map(temp=>Math.round(temp['temp']))\n    const temp_time_data= [];\n    console.log(\"weather data\",weatherArr)\n    for(var i=0;i<40;i++){\n      temp_time_data.push([timeArr[i],temp[i],feelsArr[i]])\n    }\n    this.setState({\n      temp_time_data: temp_time_data\n    })\n    })\n  }\n\n\n  render (){\n    var tempData=this.state.temp_time_data;\n    var currentTemp = this.state.curr_temp;\n    var currentCity = this.state.curr_city;\n    var currentWeather = this.state.curr_weather;\n    console.log(\"state data\",tempData)\n    return(\n    <div className=\"weatherApp\">\n      <div className=\"currentWeather\">\n          <CurrentInfo temp = {currentTemp} city ={currentCity} weather={currentWeather} />\n      </div>\n      <ResponsiveContainer>\n      <ComposedChart data={tempData}>\n       \n        <Bar name = \"Temperature\" dataKey=\"1\" fill=\"#4056a1\" barSize={2}/>\n        <Line name = \"Feels like\" type= \"natural\" dataKey=\"2\" stroke=\"#f13c20\" dot={<CustomizedDot/>} />\n        <XAxis dataKey=\"0\" height={150} interval=\"preserveStart\"/>\n        <Tooltip cursor={{ stroke: 'white', strokeWidth: 2 }}/>\n        <Legend verticalAlign=\"top\" height={20} iconSize={10}/>\n      </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n    );\n  }\n}\n\nfunction App(){\n  return(\n    <div className=\"app winterApp\">\n      <Weather/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Weather';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","module.exports = {\r\n    \"weatherKey\": \"801561aef0674d08a30111cde237b111\"\r\n}"],"sourceRoot":""}